[package]
name = "batgrep"
version = "0.1.0"
edition = "2018"
authors = ["rhysd <lin90162@yahoo.co.jp>"]
description = """
if bat && (ripgrep || grep) { \"awesome\" }

batgrep is like grep, but uses bat to print the results. It eats results of
`grep -nH` and prints the matches with syntax highlighting.

This is similar to `-C` option of `grep` command, but its output is enhanced
with syntax highlighting. It focuses on human readable outputs. batgrep is
useful to survey the matches with contexts around them. When some matches are
near enough, batgrep prints the lines within one code snippet.

batgrep provides a builtin subset implementation of ripgrep as optional
feature.
"""
license = "MIT"
homepage = "https://github.com/rhysd/batgrep#readme"
repository = "https://github.com/rhysd/batgrep"
readme = "README.md"
include = [
    "/src",
    "/LICENSE.txt",
    "/README.md",
]
categories = ["command-line-utilities", "text-processing"]
keywords = ["grep", "search", "syntax-highlighting", "ripgrep", "bat"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["ripgrep"]
ripgrep = [
    "grep-matcher",
    "grep-pcre2",
    "grep-regex",
    "grep-searcher",
    "ignore",
    "rayon",
    "regex",
]

[dependencies]
anyhow = "1"
bat = { version = "^0.18.3", default-features = false, features = ["regex-onig"] }
clap = { version = "3.0.0-beta", default-features = false, features = ["std", "color", "suggestions"] }
grep-regex = { version = "0.1.9", optional = true }
grep-searcher = { version = "0.1.8", optional = true }
rayon = { version = "1", optional = true }
ignore = { version = "0.4", optional = true }
regex = { version = "1", optional = true }
grep-matcher = { version = "0.1.5", optional = true }
grep-pcre2 = { version = "0.1.5", optional = true }
