name: Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]'

jobs:
  create_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: get_version
        # $GITHUB_REF will have a value like "refs/tags/0.3.1". Extract "0.3.1" from it
        run: echo "::set-output name=version::${GITHUB_REF##refs/tags/}"
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
  upload:
    name: Upload binary
    needs: [create_release]
    strategy:
      fail-fast: false
      matrix:
        build: [linux, mac, win]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: mac
            os: macos-latest
            target: x86_64-apple-darwin
          - build: win
            os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    env:
      ASSET_DIR: hgrep-${{ needs.create_release.outputs.version }}-${{ matrix.target }}
      ZIP_FILE: hgrep-${{ needs.create_release.outputs.version }}-${{ matrix.target }}.zip
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --color always --target=${{ matrix.target }} --verbose
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          RUST_BACKTRACE: 1
      - name: Archive files
        if: matrix.build == 'linux' || matrix.build == 'mac'
        run: |
          mkdir $ASSET_DIR
          cp target/${{ matrix.target }}/release/hgrep LICENSE.txt README.md $ASSET_DIR
          zip $ZIP_FILE -r $ASSET_DIR
      - name: Archive files
        if: matrix.build == 'win'
        shell: bash
        run: |
          mkdir $ASSET_DIR
          cp target/${{ matrix.target }}/release/hgrep.exe LICENSE.txt README.md $ASSET_DIR
          7z a $ZIP_FILE $ASSET_DIR
      - name: Upload release artifact
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.version }}
          draft: false
          prerelease: false
          files: ${{ env.ZIP_FILE }}
